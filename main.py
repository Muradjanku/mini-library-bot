import telebot
from flask import Flask, request
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
import os

# TO'G'RILANGAN: TOKEN to'g'ridan-to'g'ri yozilgan
TOKEN = "7797937191:AAHJBPfOQVKLB0wzMiVKQoncVeTWvSWmyn0"
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

user_data = {}

def get_language_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("O‚Äòzbek"), KeyboardButton("–†—É—Å—Å–∫–∏–π"))
    return markup

def get_main_menu(lang):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    if lang == 'uz':
        markup.add(KeyboardButton("Umumiy ma'lumot"), KeyboardButton("Yo‚Äònalishlar"))
        markup.add(KeyboardButton("Qabul shartlari"), KeyboardButton("Tilni o‚Äòzgartirish"))
    else:
        markup.add(KeyboardButton("–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"), KeyboardButton("–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è"))
        markup.add(KeyboardButton("–£—Å–ª–æ–≤–∏—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è"), KeyboardButton("–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"))
    return markup

def get_program_menu(lang):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    if lang == 'uz':
        buttons = [
            "Kiberxavfsizlik injiniringi", "Kompyuter injiniringi", "Dasturiy injiniring",
            "Yurisprudensiya", "Menejment", "Iqtisodiyot",
            "Axborot xavfsizligi", "Kiber huquq", "Orqaga"
        ]
    else:
        buttons = [
            "–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è", "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è",
            "–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è", "–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç", "–≠–∫–æ–Ω–æ–º–∏–∫–∞",
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–ö–∏–±–µ—Ä –ø—Ä–∞–≤–æ", "–ù–∞–∑–∞–¥"
        ]
    for btn in buttons:
        markup.add(KeyboardButton(btn))
    return markup

program_info_uz = {
    "Kiberxavfsizlik injiniringi": (
        "üõ°Ô∏è *Kiberxavfsizlik injiniringi*\n"
        "‚Ä¢ Tahdidlarni aniqlash, ularni oldini olish va tizimlarni himoyalash usullari.\n"
        "‚Ä¢ Amaliy mashg‚Äòulotlar xalqaro standartlar asosida.\n"
        "‚Ä¢ Ish o‚Äòrinlari: CERT, SOC, IT bo‚Äòlimlar."
    ),
    "Kompyuter injiniringi": (
        "üíª *Kompyuter injiniringi*\n"
        "‚Ä¢ Tizim arxitekturasi va apparat-dasturiy integratsiya.\n"
        "‚Ä¢ Real loyihalar asosida o‚Äòqitiladi."
    ),
    "Dasturiy injiniring": (
        "üß† *Dasturiy injiniring*\n"
        "‚Ä¢ Versiya nazorati, testlash, ishlab chiqish jarayonlari.\n"
        "‚Ä¢ Python, Java, Web, AI asosida."
    ),
    "Yurisprudensiya": (
        "‚öñÔ∏è *Yurisprudensiya*\n"
        "‚Ä¢ Xalqaro va shartnomaviy huquq.\n"
        "‚Ä¢ Kiberhuquq asoslari bilan."
    ),
    "Menejment": (
        "üìä *Menejment*\n"
        "‚Ä¢ Biznes jarayonlari va yetakchilik.\n"
        "‚Ä¢ IT kompaniyalarda amaliyot."
    ),
    "Iqtisodiyot": (
        "üìà *Iqtisodiyot*\n"
        "‚Ä¢ Raqamli iqtisod, moliya, statistika.\n"
        "‚Ä¢ Tahliliy fikrlash topshiriqlari bilan."
    ),
    "Axborot xavfsizligi": (
        "üõ°Ô∏è *Magistratura: Axborot xavfsizligi*\n"
        "‚Ä¢ Penetratsion testlar, forensika, kriptografiya."
    ),
    "Kiber huquq": (
        "‚öñÔ∏è *Magistratura: Kiber huquq*\n"
        "‚Ä¢ Shaxsiy ma‚Äôlumotlar, xalqaro axborot huquqi."
    )
}

@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    user_data[chat_id] = {'lang': None, 'state': 'start'}
    bot.send_message(chat_id, "Tilni tanlang / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=get_language_menu())

@bot.message_handler(func=lambda msg: True)
def main_handler(message):
    chat_id = message.chat.id
    text = message.text

    if chat_id not in user_data:
        user_data[chat_id] = {'lang': None, 'state': 'start'}

    lang = user_data[chat_id]['lang']
    state = user_data[chat_id]['state']

    if text in ["O‚Äòzbek", "Tilni o‚Äòzgartirish"]:
        user_data[chat_id] = {'lang': 'uz', 'state': 'main'}
        bot.send_message(chat_id, "Til tanlandi: O‚Äòzbek tili", reply_markup=get_main_menu('uz'))
        return
    elif text in ["–†—É—Å—Å–∫–∏–π", "–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"]:
        user_data[chat_id] = {'lang': 'ru', 'state': 'main'}
        bot.send_message(chat_id, "–í—ã–±—Ä–∞–Ω —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫", reply_markup=get_main_menu('ru'))
        return

    if not lang:
        bot.send_message(chat_id, "Avval tilni tanlang / –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", reply_markup=get_language_menu())
        return

    if lang == 'uz':
        if text == "Umumiy ma'lumot":
            bot.send_message(chat_id,
                "‚öôÔ∏è O‚Äòzbekiston Respublikasi Prezidentining 2025-yil 20-yanvardagi PQ‚Äì14-sonli qaroriga asosan, Cyber University tashkil etildi.\n"
                "üîó https://lex.uz/uz/docs/-7332592\n\n"
                "‚úÖ Maqsad: xalqaro raqobatbardosh, innovatsion va amaliy mutaxassislar tayyorlash.\n"
                "üìç Joylashuv: Toshkent viloyati, Nurafshon shahri\n"
                "üåê Rasmiy sayt: https://csu.uz/uz"
            )
        elif text == "Qabul shartlari":
            bot.send_message(chat_id,
                "üßë‚Äçüíª 2025/2026 uchun imkoniyatlar:\n"
                "‚Ä¢ 100 ta davlat granti\n"
                "‚Ä¢ Sanoat hamkorlari stipendiyalari\n\n"
                "üìò O‚Äòqish:\n"
                "‚Ä¢ 1 yil Foundation, 3 yil bakalavriat\n"
                "‚Ä¢ To‚Äòliq ingliz tilida\n"
                "‚Ä¢ Kredit-modul tizimi\n"
                "‚Ä¢ Amaliyot IT kompaniyalarda"
            )
        elif text == "Yo‚Äònalishlar":
            user_data[chat_id]['state'] = 'programs'
            bot.send_message(chat_id, "Yo‚Äònalishni tanlang:", reply_markup=get_program_menu(lang))
        elif text in program_info_uz:
            bot.send_message(chat_id, program_info_uz[text], parse_mode='Markdown')
        elif text == "Orqaga":
            user_data[chat_id]['state'] = 'main'
            bot.send_message(chat_id, "Asosiy menyu", reply_markup=get_main_menu(lang))
        else:
            bot.send_message(chat_id, "Iltimos, menyudan tanlang.")
    else:
        bot.send_message(chat_id, "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ ‚Äî tez orada qo‚Äòshiladi.")

# Webhook endpoint
@app.route("/", methods=["POST"])
def webhook():
    update = telebot.types.Update.de_json(request.data.decode("utf-8"))
    bot.process_new_updates([update])
    return "OK", 200

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url="https://muradjanku.up.railway.app/")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
